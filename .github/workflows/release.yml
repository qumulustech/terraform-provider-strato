# Terraform Provider release workflow for Terraform Registry
name: Release

# This GitHub action creates a release when a tag that matches the pattern
# "v*" (e.g. v0.1.0) is created. The release is automatically published to
# the Terraform Registry after the initial provider registration.
on:
  push:
    tags:
      - 'v*'

# Releases need permissions to read and write the repository contents.
# GitHub considers creating releases and uploading assets as writing contents.
permissions:
  contents: write
  id-token: write

jobs:
  goreleaser:
    # TEMPORARY: Removed group: prod - uncomment to restore
    # runs-on:
    #   group: prod
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v5 # v5.0.0
        with:
          # Allow goreleaser to access older tag information.
          fetch-depth: 0

      # TEMPORARY: Using repository secrets instead of Vault - uncomment below to restore Vault
      # - name: Fetch secrets from Vault
      #   uses: QumulusTechnology/vault-setup-action@v3
      #   with:
      #     aws_account_data: ${{ secrets.AWS_ACCOUNT_DATA }}
      #     vault_addr: ${{ secrets.VAULT_ADDR }}
      #     platform: qcp
      #     secrets: |
      #       secret/data/qcp/global/automation-user-gpg-key private-key | GPG_PRIVATE_KEY;
      #       secret/data/qcp/global/automation-user-gpg-key public-key | GPG_PUBLIC_KEY;
      #       secret/data/qcp/global/automation-user-github-token token | GITHUB_ACCESS_TOKEN;
      #       secret/data/qcp/global/github-automation-user-ssh-key private_key | SSH_PRIVATE_KEY;

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.1
        with:
          # TEMPORARY: Using repository secret directly (OLD: ${{ env.SSH_PRIVATE_KEY }})
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Configure Git for private modules
        run: |
          # Add GitHub to known_hosts to avoid SSH prompts
          mkdir -p ~/.ssh
          ssh-keyscan github.com >> ~/.ssh/known_hosts
          # Configure Git to use SSH instead of HTTPS
          git config --global url."git@github.com:".insteadOf "https://github.com/"
        env:
          GOPRIVATE: github.com/QumulusTechnology/*

      - name: Set up Go
        uses: actions/setup-go@v6 # v5.5.0
        with:
          go-version-file: 'go.mod'
          cache: true
        env:
          GOPRIVATE: github.com/QumulusTechnology/*

      - name: Import GPG key
        uses: crazy-max/ghaction-import-gpg@e89d40939c28e39f97cf32126055eeae86ba74ec # v6.3.0
        id: import_gpg
        with:
          # TEMPORARY: Using repository secret directly (OLD: ${{ env.GPG_PRIVATE_KEY }})
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ''

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@e435ccd777264be153ace6237001ef4d979d3a7a # v6.4.0
        with:
          version: latest
          args: release --clean
        env:
          # GitHub sets the GITHUB_TOKEN secret automatically.
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GPG_FINGERPRINT: ${{ steps.import_gpg.outputs.fingerprint }}
          GOPRIVATE: github.com/QumulusTechnology/*

      - name: Upload release artifacts
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: release-artifacts
          path: dist/
